version: 0.2

env:
  parameter-store:
	DOCKER_REGISTRY_USERNAME: /myapp/docker-credentials/username
	DOCKER_REGISTRY_PASSWORD: /myapp/docker-credentials/password
	DOCKER_REGISTRY_URL: /myapp/docker-credentials/url
  variables:
    IMAGE_TAG: "latest"

phases:
  install:
    runtime-versions:
      java: corretto17
      docker: 20
    commands:
      - echo "Installing dependencies..."

  pre_build:
    commands:
      - echo "Logging into Amazon ECR..."
      - aws --version
	  - docker --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO
      - echo "Cleaning old builds..."

  build:
    commands:
      - echo "Building Spring Boot JAR..."
      - ./mvnw clean package -DskipTests
      - echo "Building Docker image..."
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/$IMAGENAME ."
      - docker tag IMAGENAME:latest $ECR_REPO:$IMAGENAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/$IMAGENAME:$IMAGE_TAG"
      - echo "Creating imagedefinitions.json..."
      - printf '[{"name":"springboot","imageUri":"%s"}]' $ECR_REPO:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
